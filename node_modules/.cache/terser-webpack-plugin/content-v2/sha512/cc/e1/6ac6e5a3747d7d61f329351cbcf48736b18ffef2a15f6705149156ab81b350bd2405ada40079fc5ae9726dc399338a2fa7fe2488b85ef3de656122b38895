{"code":"!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=2)}([function(e,t){e.exports=react-native},function(e,t){e.exports=react},function(e,t,n){\"use strict\";n.r(t);var r={};n.r(r),n.d(r,\"LinearGradient\",function(){return l});var o=n(1),a=n(0);function i(e){const{colors:t,locations:n,startPoint:r,endPoint:i,...l}=e;return console.warn(\"LinearGradient is not available on this platform\"),o.createElement(a.View,Object.assign({},l))}function l({colors:e,locations:t,start:n,end:r,...l}){return t&&e.length!==t.length&&(console.warn(\"LinearGradient colors and locations props should be arrays of the same length\"),t=t.slice(0,e.length)),o.createElement(i,Object.assign({},l,{colors:a.Platform.select({web:e,default:e.map(a.processColor)}),locations:t,startPoint:c(n),endPoint:c(r)}))}function c(e){if(e){if(!Array.isArray(e)||2===e.length)return Array.isArray(e)?e:[e.x,e.y];console.warn(\"start and end props for LinearGradient must be of the format [x,y] or {x, y}\")}}console.log(r)}]);","extractedComments":[]}